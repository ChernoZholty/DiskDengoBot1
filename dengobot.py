import discord
from discord.ext import commands
import logging
from dotenv import load_dotenv
from datetime import datetime
import os

# --- –õ–û–ì–ò ---
logging.basicConfig(level=logging.INFO)

load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')

# --- ID –†–û–õ–ò + –ö–ê–ù–ê–õ–û–í ---
ACTIVE_ROLE_ID = 1407089794240090263
LOG_CHANNEL_ID = 1407081468525805748        # –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ (–∞–¥–º–∏–Ω)
COMMAND_CHANNEL_ID = 1407081468525805748   # –∫–∞–Ω–∞–ª, –≥–¥–µ –±–æ—Ç –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å /give mone
DB_CHANNEL_ID = 1407213722824343602  # —Å–æ–∑–¥–∞—ë—à—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è "–±–∞–∑—ã"

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
intents.voice_states = True

bot = commands.Bot(command_prefix="*", intents=intents)

voice_times = {}   # {member_id: datetime}
balances = {}      # {member_id: int}

# –°–∫–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç –∑–∞ –º–∏–Ω—É—Ç—É
MONEY_PER_MINUTE = 1

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")


# --- —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è "–±–∞–∑—ã" ---
async def load_balances():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –±–∞–ª–∞–Ω—Å—ã –∏–∑ –∫–∞–Ω–∞–ª–∞"""
    db_channel = bot.get_channel(DB_CHANNEL_ID)
    if not db_channel:
        logging.error("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    async for msg in db_channel.history(limit=None, oldest_first=True):
        try:
            user_id, balance = msg.content.split(":")
            balances[int(user_id)] = int(balance)
        except ValueError:
            continue


async def save_balance(user_id: int):
    """–û–±–Ω–æ–≤–ª—è–µ–º/—Å–æ–∑–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º"""
    db_channel = bot.get_channel(DB_CHANNEL_ID)
    if not db_channel:
        logging.error("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    # –∏—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
    async for msg in db_channel.history(limit=None):
        if msg.content.startswith(f"{user_id}:"):
            await msg.edit(content=f"{user_id}:{balances[user_id]}")
            return

    # –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ
    await db_channel.send(f"{user_id}:{balances[user_id]}")


@bot.event
async def on_ready():
    await load_balances()
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}, –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(balances)} –±–∞–ª–∞–Ω—Å–æ–≤.")


@bot.event
async def on_voice_state_update(member, before, after):
    guild = member.guild
    role = guild.get_role(ACTIVE_ROLE_ID)
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    command_channel = bot.get_channel(COMMAND_CHANNEL_ID)

    if before.channel is None and after.channel is not None:  # –≤—Ö–æ–¥
        if role not in member.roles:
            await member.add_roles(role)
        voice_times[member.id] = datetime.now()
        if log_channel:
            await log_channel.send(f"‚úÖ {member} –∑–∞—à—ë–ª –≤ {after.channel}, —Ä–æ–ª—å –≤—ã–¥–∞–Ω–∞.")

    if before.channel is not None and after.channel is None:  # –≤—ã—Ö–æ–¥
        if role in member.roles:
            await member.remove_roles(role)

        if member.id in voice_times:
            join_time = voice_times.pop(member.id)
            minutes = int((datetime.now() - join_time).total_seconds() // 60)

            if minutes > 0:
                money = minutes * MONEY_PER_MINUTE
                balances[member.id] = balances.get(member.id, 0) + money
                await save_balance(member.id)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ "–±–∞–∑—É"

                total_balance = balances[member.id]
                if command_channel:
                    await command_channel.send(
                        f"üí∞ {member.mention}, —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ **{money}** –º–æ–Ω–µ—Ç "
                        f"(–∑–∞ {minutes} –º–∏–Ω). –ë–∞–ª–∞–Ω—Å: **{total_balance}**."
                    )
            else:
                if command_channel:
                    await command_channel.send(
                        f"‚ö†Ô∏è {member.mention}, –±—ã–ª –≤ –≤–æ–π—Å–µ <1 –º–∏–Ω. –ú–æ–Ω–µ—Ç—ã –Ω–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã."
                    )


@bot.command(name="–±–∞–ª–∞–Ω—Å")
async def balance(ctx, member: discord.Member = None):
    member = member or ctx.author
    balance = balances.get(member.id, 0)
    await ctx.send(f"üí∞ –ë–∞–ª–∞–Ω—Å {member.mention}: **{balance}** –º–æ–Ω–µ—Ç.")


@bot.command(name="givemoney")
@commands.has_permissions(administrator=True)
async def givemoney(ctx, amount: int, member: discord.Member):
    if amount <= 0:
        await ctx.send("‚ö†Ô∏è –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
        return

    balances[member.id] = balances.get(member.id, 0) + amount
    await save_balance(member.id)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ "–±–∞–∑—É"

    total_balance = balances[member.id]
    await ctx.send(f"‚úÖ {member.mention} –ø–æ–ª—É—á–∏–ª {amount} –º–æ–Ω–µ—Ç. –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {total_balance}")


bot.run(TOKEN)
